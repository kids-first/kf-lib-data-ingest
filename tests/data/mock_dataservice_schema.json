{
    "definitions":{
        "Biospecimen":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "age_at_event_days":{
                    "description":"Age at the time of event occurred in number of days since birth.",
                    "format":"int32",
                    "type":"integer",
                    "x-nullable":true
                },
                "analyte_type":{
                    "description":"The molecular description of the aliquot",
                    "enum":[
                        "Not Available",
                        "DNA",
                        "Not Applicable",
                        "Other",
                        "Virtual",
                        "RNA",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Allowed To Collect"
                    ],
                    "type":"string"
                },
                "biospecimen_diagnoses":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "composition":{
                    "description":"The cellular composition of the biospecimen",
                    "type":"string",
                    "x-nullable":true
                },
                "concentration_mg_per_ml":{
                    "description":"The concentration of the aliquot",
                    "format":"float",
                    "type":"number",
                    "x-nullable":true
                },
                "consent_type":{
                    "description":"Short name of consent",
                    "type":"string",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "dbgap_consent_code":{
                    "description":"Consent classification code from dbgap",
                    "type":"string",
                    "x-nullable":true
                },
                "external_aliquot_id":{
                    "description":"Name given to aliquot by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "external_sample_id":{
                    "description":"Name given to sample by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "method_of_sample_procurement":{
                    "description":"The method used to procure the sample used to extract analyte(s)",
                    "enum":[
                        "Not Available",
                        "Autopsy",
                        "Not Applicable",
                        "Biopsy",
                        "Subtotal Resections",
                        "Other",
                        "Gross Total Resections",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Allowed To Collect",
                        "Blood Draw"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "ncit_id_anatomical_site":{
                    "description":"The ID term from the NationalCancer Institute Thesaurus which represents a harmonized anatomical_site",
                    "type":"string",
                    "x-nullable":true
                },
                "ncit_id_tissue_type":{
                    "description":"The ID term from the National CancerInstitute Thesaurus which represents a harmonized tissue_type",
                    "type":"string",
                    "x-nullable":true
                },
                "participant_id":{
                    "description":"The kf_id of the biospecimen's donor",
                    "maxLength":11,
                    "type":"string"
                },
                "sequencing_center_id":{
                    "description":"The kf_id of the sequencing center",
                    "maxLength":11,
                    "type":"string"
                },
                "shipment_date":{
                    "description":"The date the aliquot was shipped",
                    "type":"string",
                    "x-nullable":true
                },
                "shipment_origin":{
                    "description":"The original site of the aliquot",
                    "type":"string",
                    "x-nullable":true
                },
                "source_text_anatomical_site":{
                    "description":"The anatomical location of collection",
                    "type":"string",
                    "x-nullable":true
                },
                "source_text_tissue_type":{
                    "description":"Description of the kind of biospecimen collected",
                    "type":"string",
                    "x-nullable":true
                },
                "source_text_tumor_descriptor":{
                    "description":"Disease present in the biospecimen",
                    "type":"string",
                    "x-nullable":true
                },
                "spatial_descriptor":{
                    "description":"Ontology term that harmonizes thespatial concepts from Biological Spatial Ontology",
                    "type":"string",
                    "x-nullable":true
                },
                "uberon_id_anatomical_site":{
                    "description":"The ID of the term from Uber-anatomy ontology which represents harmonized anatomical ontologies",
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                },
                "volume_ul":{
                    "description":"The volume of the aliquot",
                    "format":"float",
                    "type":"number",
                    "x-nullable":true
                }
            },
            "required":[
                "analyte_type",
                "participant_id",
                "sequencing_center_id"
            ],
            "type":"object"
        },
        "BiospecimenDiagnosis":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "biospecimen_id":{
                    "example":"BS_ABC2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "diagnosis_id":{
                    "example":"GF_ABB2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "biospecimen_id",
                "diagnosis_id"
            ],
            "type":"object"
        },
        "BiospecimenDiagnosisPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/biospecimen-diagnoses?after=1519402953",
                        "self":"/biospecimen-diagnoses?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/BiospecimenDiagnosis"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "BiospecimenDiagnosisResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/BiospecimenDiagnosis"
                }
            },
            "type":"object"
        },
        "BiospecimenGenomicFile":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "biospecimen_id":{
                    "example":"BS_ABC2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "genomic_file_id":{
                    "example":"GF_ABB2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "biospecimen_id",
                "genomic_file_id"
            ],
            "type":"object"
        },
        "BiospecimenGenomicFilePaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/biospecimen-genomic-files?after=1519402953",
                        "self":"/biospecimen-genomic-files?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/BiospecimenGenomicFile"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "BiospecimenGenomicFileResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/BiospecimenGenomicFile"
                }
            },
            "type":"object"
        },
        "BiospecimenPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/biospecimens?after=1519402953",
                        "self":"/biospecimens?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Biospecimen"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "BiospecimenResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Biospecimen"
                }
            },
            "type":"object"
        },
        "CavaticaApp":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_cavatica_app_id":{
                    "description":"Id given to Cavatica app by Cavatica user",
                    "type":"string",
                    "x-nullable":true
                },
                "github_commit_url":{
                    "description":"Link to git commit on GitHub",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "name":{
                    "description":"Name given to Cavatica app by Cavatica user",
                    "type":"string",
                    "x-nullable":true
                },
                "revision":{
                    "description":"Revision number of the Cavatica app assigned by Cavatica user",
                    "format":"int32",
                    "type":"integer",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "type":"object"
        },
        "CavaticaAppPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/cavatica-apps?after=1519402953",
                        "self":"/cavatica-apps?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/CavaticaApp"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "CavaticaAppResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/CavaticaApp"
                }
            },
            "type":"object"
        },
        "ClientErrorResponse":{
            "properties":{
                "code":{
                    "description":"HTTP response code",
                    "example":400,
                    "format":"int32",
                    "type":"integer"
                },
                "description":{
                    "description":"status message",
                    "example":"could not <create | update> <entity> {'<field>': ['Not a valid <expected type>.']}",
                    "type":"string"
                }
            },
            "type":"object"
        },
        "Diagnosis":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "age_at_event_days":{
                    "description":"Age at the time of event occurred in number of days since birth",
                    "example":232,
                    "format":"int32",
                    "type":"integer",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "diagnosis_category":{
                    "description":"High level diagnosis categorization",
                    "enum":[
                        "Not Available",
                        "Not Applicable",
                        "Structural Birth Defect",
                        "Other",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Allowed To Collect",
                        "Cancer"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "icd_id_diagnosis":{
                    "description":"The ID of the term from the International Classification of Diseases which represents harmonized diagnosis",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "mondo_id_diagnosis":{
                    "description":"The ID of the term from the Monary Disease Ontology which represents a harmonized diagnosis",
                    "type":"string",
                    "x-nullable":true
                },
                "ncit_id_diagnosis":{
                    "description":"The ID term from the National Cancer Institute Thesaurus which represents a harmonized diagnosis",
                    "type":"string",
                    "x-nullable":true
                },
                "participant_id":{
                    "description":"the participant who was diagnosed",
                    "example":"PT_DZB048J5",
                    "maxLength":11,
                    "type":"string"
                },
                "source_text_diagnosis":{
                    "description":"the pathological diagnosis",
                    "type":"string",
                    "x-nullable":true
                },
                "source_text_tumor_location":{
                    "description":"location of the tumor",
                    "type":"string",
                    "x-nullable":true
                },
                "spatial_descriptor":{
                    "description":"Ontology term that harmonizes thespatial concepts from Biological Spatial Ontology",
                    "type":"string",
                    "x-nullable":true
                },
                "uberon_id_tumor_location":{
                    "description":"The ID of the term from Uber anatomy ontology which represents harmonized anatomical ontologies",
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "participant_id"
            ],
            "type":"object"
        },
        "DiagnosisPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/diagnoses?after=1519402953",
                        "self":"/diagnoses?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Diagnosis"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "DiagnosisResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Diagnosis"
                }
            },
            "type":"object"
        },
        "Family":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"ID used by external study",
                    "type":"string",
                    "x-nullable":true
                },
                "family_type":{
                    "description":"Denotes type of family",
                    "enum":[
                        "Duo",
                        "Not Available",
                        "Not Applicable",
                        "Proband Only",
                        "Duo+",
                        "Other",
                        "Trio+",
                        "Not Reported",
                        "Reported Unknown",
                        "Trio",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "type":"object"
        },
        "FamilyPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/families?after=1519402953",
                        "self":"/families?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Family"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "FamilyRelationship":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "participant1_id":{
                    "description":"kf_id of one participant in the relationship",
                    "example":"PT_B048J5",
                    "maxLength":11,
                    "type":"string"
                },
                "participant1_to_participant2_relation":{
                    "type":"string"
                },
                "participant2_id":{
                    "description":"kf_id of the other participant in the relationship",
                    "example":"PT_B048J6",
                    "maxLength":11,
                    "type":"string"
                },
                "participant2_to_participant1_relation":{
                    "type":"string",
                    "x-nullable":true
                },
                "source_text_notes":{
                    "description":"Text notes from source describing the relationship",
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "participant1_id",
                "participant1_to_participant2_relation",
                "participant2_id"
            ],
            "type":"object"
        },
        "FamilyRelationshipPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/family-relationships?after=1519402953",
                        "self":"/family-relationships?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/FamilyRelationship"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "FamilyRelationshipResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/FamilyRelationship"
                }
            },
            "type":"object"
        },
        "FamilyResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Family"
                }
            },
            "type":"object"
        },
        "GenomicFile":{
            "properties":{
                "_links":{
                    "description":"Resource links and pagination",
                    "type":"string"
                },
                "access_urls":{
                    "items":{
                        "type":"string"
                    },
                    "readOnly":true,
                    "type":"array"
                },
                "acl":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "availability":{
                    "description":"Indicates whether a file is available for immediate download, or is in cold storage",
                    "enum":[
                        "Not Reported",
                        "Immediate Download",
                        "Not Available",
                        "Cold Storage",
                        "Reported Unknown",
                        "Not Applicable",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "controlled_access":{
                    "description":"Whether or not the fileis controlled access",
                    "type":"boolean",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "data_type":{
                    "description":"Type of genomic file",
                    "enum":[
                        "Simple Nucleotide Variation",
                        "Expression",
                        "Aligned Reads Index",
                        "Unaligned Reads",
                        "Histology Images",
                        "Variant Calls",
                        "Variant Calls Index",
                        "Pathology Reports",
                        "Not Available",
                        "Aligned Reads",
                        "Operation Reports",
                        "Not Applicable",
                        "Other",
                        "gVCF",
                        "gVCF Index",
                        "Not Allowed To Collect",
                        "Radiology Images",
                        "Not Reported",
                        "Reported Unknown",
                        "Radiology Reports"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "file_format":{
                    "description":"Size of file in bytes",
                    "type":"string",
                    "x-nullable":true
                },
                "file_name":{
                    "type":"string"
                },
                "hashes":{
                    "type":"object"
                },
                "is_harmonized":{
                    "description":"Whether or not the file is harmonized",
                    "type":"boolean",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "latest_did":{
                    "format":"uuid",
                    "readOnly":true,
                    "type":"string"
                },
                "metadata":{
                    "type":"object"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "paired_end":{
                    "description":"The direction of the read",
                    "enum":[
                        1,
                        2,
                        "Not Available",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Applicable",
                        "Not Allowed To Collect"
                    ],
                    "format":"int32",
                    "type":"integer",
                    "x-nullable":true
                },
                "read_group_genomic_files":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "reference_genome":{
                    "description":"Original reference genome of the unharmonized genomic files",
                    "type":"string",
                    "x-nullable":true
                },
                "sequencing_experiment_genomic_files":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "size":{
                    "format":"int32",
                    "type":"integer"
                },
                "urls":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "hashes",
                "size",
                "urls"
            ],
            "type":"object"
        },
        "GenomicFilePaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/genomic-files?after=1519402953",
                        "self":"/genomic-files?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/GenomicFile"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "GenomicFileResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/GenomicFile"
                }
            },
            "type":"object"
        },
        "Investigator":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "institution":{
                    "description":"The name of the investigator's institution",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "name":{
                    "description":"The name of the investigator",
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "type":"object"
        },
        "InvestigatorPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/investigators?after=1519402953",
                        "self":"/investigators?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Investigator"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "InvestigatorResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Investigator"
                }
            },
            "type":"object"
        },
        "NotFoundErrorResponse":{
            "properties":{
                "code":{
                    "description":"HTTP response code",
                    "example":404,
                    "format":"int32",
                    "type":"integer"
                },
                "description":{
                    "description":"status message",
                    "example":"could not find <entity> <entity.kf_id>",
                    "type":"string"
                }
            },
            "type":"object"
        },
        "Outcome":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "age_at_event_days":{
                    "description":"Age at the time of event occurred in number of days since birth.",
                    "example":232,
                    "format":"int32",
                    "type":"integer",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "disease_related":{
                    "enum":[
                        "Not Allowed To Collect",
                        "Not Available",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Applicable",
                        "No",
                        "Yes"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "participant_id":{
                    "description":"kf_id of the participant this outcome was reported for",
                    "example":"PT_DZB048J5",
                    "maxLength":11,
                    "type":"string"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                },
                "vital_status":{
                    "description":"The vital status reported",
                    "enum":[
                        "Alive",
                        "Deceased",
                        "Not Available",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Applicable",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                }
            },
            "required":[
                "participant_id"
            ],
            "type":"object"
        },
        "OutcomePaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/outcomes?after=1519402953",
                        "self":"/outcomes?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Outcome"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "OutcomeResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Outcome"
                }
            },
            "type":"object"
        },
        "Participant":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "affected_status":{
                    "description":"Denotes whether participant is affected",
                    "type":"boolean",
                    "x-nullable":true
                },
                "alias_group":{
                    "type":"string",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "diagnosis_category":{
                    "description":"High level diagnosis categorization",
                    "enum":[
                        "Not Available",
                        "None",
                        "Not Applicable",
                        "Structural Birth Defect",
                        "Other",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Allowed To Collect",
                        "Structural Birth Defect and Cancer",
                        "Cancer"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "ethnicity":{
                    "description":"The ethnicity of the participant",
                    "enum":[
                        "Not Reported",
                        "Not Available",
                        "Not Hispanic or Latino",
                        "Reported Unknown",
                        "Not Applicable",
                        "Not Allowed To Collect",
                        "Hispanic or Latino"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"ID used by external study",
                    "type":"string",
                    "x-nullable":true
                },
                "family_id":{
                    "description":"Id for the participants grouped by family",
                    "example":"FM_ABB2C104",
                    "maxLength":11,
                    "type":"string",
                    "x-nullable":true
                },
                "gender":{
                    "description":"The gender of the participant",
                    "enum":[
                        "Not Available",
                        "Female",
                        "Not Applicable",
                        "Other",
                        "Not Reported",
                        "Reported Unknown",
                        "Male",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "is_proband":{
                    "description":"Denotes whether participant is proband of study",
                    "type":"boolean",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "race":{
                    "description":"The race of the participant",
                    "enum":[
                        "Not Reported",
                        "Asian",
                        "Not Available",
                        "Native Hawaiian or Other Pacific Islander",
                        "American Indian or Alaska Native",
                        "Not Applicable",
                        "Other",
                        "Not Allowed To Collect",
                        "Black or African American",
                        "Reported Unknown",
                        "More Than One Race",
                        "White"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "study_id":{
                    "maxLength":11,
                    "type":"string"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "study_id"
            ],
            "type":"object"
        },
        "ParticipantPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/participants?after=1519402953",
                        "self":"/participants?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Participant"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "ParticipantResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Participant"
                }
            },
            "type":"object"
        },
        "Phenotype":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "age_at_event_days":{
                    "description":"Age at the time of event occurred in number of days since birth",
                    "example":232,
                    "format":"int32",
                    "type":"integer",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "hpo_id_phenotype":{
                    "description":"The ID of the term from Human Phenotype Ontology which represents a harmonized phenotype",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "observed":{
                    "description":"whether phenotype is negative or positive",
                    "enum":[
                        "Negative",
                        "Positive",
                        "Not Available",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Applicable",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "participant_id":{
                    "example":"PT_DZB048J5",
                    "maxLength":11,
                    "type":"string"
                },
                "snomed_id_phenotype":{
                    "description":"The ID of the term from Systematized Nomenclature of Medicine --Clinical Terms which encodes clinical terminology",
                    "type":"string",
                    "x-nullable":true
                },
                "source_text_phenotype":{
                    "description":"Name given to Phenotype by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "participant_id"
            ],
            "type":"object"
        },
        "PhenotypePaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/phenotypes?after=1519402953",
                        "self":"/phenotypes?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Phenotype"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "PhenotypeResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Phenotype"
                }
            },
            "type":"object"
        },
        "ReadGroup":{
            "properties":{
                "_links":{
                    "description":"Resource links and pagination",
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"Name given to read group by the contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "flow_cell":{
                    "description":"The identifier of the group's flow cell",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "lane_number":{
                    "description":"The group's lane",
                    "format":"float",
                    "type":"number",
                    "x-nullable":true
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "quality_scale":{
                    "description":"The scale used to encode quality scores",
                    "enum":[
                        "Illumina18",
                        "Not Reported",
                        "Not Available",
                        "Not Applicable",
                        "Illumina13",
                        "Solexa",
                        "Illumina15",
                        "Sanger",
                        "Reported Unknown",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "read_group_genomic_files":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "type":"object"
        },
        "ReadGroupGenomicFile":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "genomic_file_id":{
                    "example":"GF_ABB2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "read_group_id":{
                    "example":"RF_ABB2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "genomic_file_id",
                "read_group_id"
            ],
            "type":"object"
        },
        "ReadGroupGenomicFilePaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/read-group-genomic-files?after=1519402953",
                        "self":"/read-group-genomic-files?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/ReadGroupGenomicFile"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "ReadGroupGenomicFileResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/ReadGroupGenomicFile"
                }
            },
            "type":"object"
        },
        "ReadGroupPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/read-groups?after=1519402953",
                        "self":"/read-groups?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/ReadGroup"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "ReadGroupResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/ReadGroup"
                }
            },
            "type":"object"
        },
        "SequencingCenter":{
            "properties":{
                "_links":{
                    "description":"Resource links and pagination",
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "name":{
                    "description":"Name given to sequencing center by contributor",
                    "type":"string"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "name"
            ],
            "type":"object"
        },
        "SequencingCenterPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/sequencing-centers?after=1519402953",
                        "self":"/sequencing-centers?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/SequencingCenter"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "SequencingCenterResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/SequencingCenter"
                }
            },
            "type":"object"
        },
        "SequencingExperiment":{
            "properties":{
                "_links":{
                    "description":"Resource links and pagination",
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "experiment_date":{
                    "description":"Date of the sequencing experiment conducted",
                    "type":"string",
                    "x-nullable":true
                },
                "experiment_strategy":{
                    "description":"Text term that represents the Library strategy",
                    "enum":[
                        "RNA-Seq",
                        "Not Reported",
                        "Not Available",
                        "Not Applicable",
                        "Other",
                        "WGS",
                        "miRNA-Seq",
                        "Reported Unknown",
                        "WXS",
                        "Not Allowed To Collect"
                    ],
                    "type":"string"
                },
                "external_id":{
                    "description":"Name given to sequencing experiment by contributor",
                    "type":"string"
                },
                "instrument_model":{
                    "description":"Text term that represents the model of instrument",
                    "type":"string",
                    "x-nullable":true
                },
                "is_paired_end":{
                    "description":"Boolean term specifies whether reads have paired end",
                    "type":"boolean"
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "library_name":{
                    "description":"Text term that represents the name of the library",
                    "type":"string",
                    "x-nullable":true
                },
                "library_strand":{
                    "description":"Text term that represents the library stranded-ness",
                    "enum":[
                        "Not Reported",
                        "Not Available",
                        "Not Applicable",
                        "Other",
                        "Unstranded",
                        "Second Stranded",
                        "First Stranded",
                        "Reported Unknown",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "max_insert_size":{
                    "description":"Maximum size of the fragmented DNA",
                    "format":"int32",
                    "type":"integer",
                    "x-nullable":true
                },
                "mean_depth":{
                    "description":"Mean depth or coverage describes the amount of sequence data that is available per position in the sequenced genome territory",
                    "format":"float",
                    "type":"number",
                    "x-nullable":true
                },
                "mean_insert_size":{
                    "description":"Mean size of the fragmented DNA",
                    "format":"float",
                    "type":"number",
                    "x-nullable":true
                },
                "mean_read_length":{
                    "description":"Mean lenth of the reads",
                    "format":"float",
                    "type":"number",
                    "x-nullable":true
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "platform":{
                    "description":"Name of the platform used to obtain data",
                    "enum":[
                        "SOLiD",
                        "Not Available",
                        "Illumina",
                        "Not Applicable",
                        "PacBio",
                        "LS454",
                        "Other",
                        "Not Reported",
                        "Reported Unknown",
                        "Ion Torrent",
                        "Not Allowed To Collect",
                        "Complete Genomics"
                    ],
                    "type":"string"
                },
                "sequencing_center_id":{
                    "description":"The kf_id of the sequencing center",
                    "maxLength":11,
                    "type":"string"
                },
                "sequencing_experiment_genomic_files":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "total_reads":{
                    "description":"Total reads of the sequencing experiment",
                    "format":"int32",
                    "type":"integer",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "experiment_strategy",
                "external_id",
                "is_paired_end",
                "platform",
                "sequencing_center_id"
            ],
            "type":"object"
        },
        "SequencingExperimentGenomicFile":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "genomic_file_id":{
                    "example":"GF_ABB2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "sequencing_experiment_id":{
                    "example":"SG_ABB2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "genomic_file_id",
                "sequencing_experiment_id"
            ],
            "type":"object"
        },
        "SequencingExperimentGenomicFilePaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/sequencing-experiment-genomic-files?after=1519402953",
                        "self":"/sequencing-experiment-genomic-files?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/SequencingExperimentGenomicFile"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "SequencingExperimentGenomicFileResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/SequencingExperimentGenomicFile"
                }
            },
            "type":"object"
        },
        "SequencingExperimentPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/sequencing-experiments?after=1519402953",
                        "self":"/sequencing-experiments?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/SequencingExperiment"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "SequencingExperimentResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/SequencingExperiment"
                }
            },
            "type":"object"
        },
        "Status":{
            "properties":{
                "branch":{
                    "description":"API branch name",
                    "example":"master",
                    "type":"string"
                },
                "code":{
                    "description":"HTTP response code",
                    "example":200,
                    "format":"int32",
                    "type":"integer"
                },
                "commit":{
                    "description":"API short commit hash",
                    "example":"aef3b5a",
                    "type":"string"
                },
                "message":{
                    "description":"status message",
                    "example":"success",
                    "type":"string"
                },
                "tags":{
                    "items":{
                        "description":"Any tags associated with the version",
                        "example":[
                            "rc",
                            "beta"
                        ],
                        "type":"string"
                    },
                    "type":"array"
                },
                "version":{
                    "description":"API version number",
                    "example":"1.2.0",
                    "type":"string"
                }
            },
            "type":"object"
        },
        "Study":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "attribution":{
                    "description":"Link to attribution prose provided by dbGaP",
                    "type":"string",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "data_access_authority":{
                    "type":"string"
                },
                "external_id":{
                    "description":"dbGaP accession number",
                    "type":"string"
                },
                "investigator_id":{
                    "example":"IG_ABB2C104",
                    "maxLength":11,
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "name":{
                    "description":"Name or title of study",
                    "type":"string",
                    "x-nullable":true
                },
                "release_status":{
                    "description":"Release status of the study",
                    "enum":[
                        "Publishing",
                        "Running",
                        "Canceled",
                        "Published",
                        "Waiting",
                        "Not Available",
                        "Not Applicable",
                        "Failed",
                        "Staged",
                        "Pending",
                        "Not Reported",
                        "Reported Unknown",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "short_name":{
                    "description":"Short name for study",
                    "type":"string",
                    "x-nullable":true
                },
                "version":{
                    "description":"dbGaP version",
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "external_id"
            ],
            "type":"object"
        },
        "StudyFile":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "access_urls":{
                    "items":{
                        "type":"string"
                    },
                    "readOnly":true,
                    "type":"array"
                },
                "acl":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "availability":{
                    "description":"Indicates whether a file is available for immediate download, or is in cold storage",
                    "enum":[
                        "Not Reported",
                        "Immediate Download",
                        "Not Available",
                        "Cold Storage",
                        "Reported Unknown",
                        "Not Applicable",
                        "Not Allowed To Collect"
                    ],
                    "type":"string",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "data_type":{
                    "description":"Type of data",
                    "type":"string",
                    "x-nullable":true
                },
                "external_id":{
                    "description":"external id used by contributor",
                    "type":"string",
                    "x-nullable":true
                },
                "file_format":{
                    "description":"Format of the file",
                    "type":"string",
                    "x-nullable":true
                },
                "file_name":{
                    "type":"string"
                },
                "hashes":{
                    "type":"object"
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "latest_did":{
                    "format":"uuid",
                    "readOnly":true,
                    "type":"string"
                },
                "metadata":{
                    "type":"object"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "size":{
                    "format":"int32",
                    "type":"integer"
                },
                "study_id":{
                    "maxLength":11,
                    "type":"string"
                },
                "urls":{
                    "items":{
                        "type":"string"
                    },
                    "type":"array"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "hashes",
                "size",
                "study_id",
                "urls"
            ],
            "type":"object"
        },
        "StudyFilePaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/study-files?after=1519402953",
                        "self":"/study-files?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/StudyFile"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "StudyFileResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/StudyFile"
                }
            },
            "type":"object"
        },
        "StudyPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/studies?after=1519402953",
                        "self":"/studies?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Study"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "StudyResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Study"
                }
            },
            "type":"object"
        },
        "Task":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "cavatica_app_id":{
                    "description":"Id for the Cavatica app to which this task belongs",
                    "example":"CA_ABB2C104",
                    "maxLength":11,
                    "type":"string",
                    "x-nullable":true
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "external_task_id":{
                    "description":"Id of the task used by externalsystems",
                    "format":"uuid",
                    "type":"string",
                    "x-nullable":true
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "name":{
                    "description":"Name given to the task by user",
                    "type":"string",
                    "x-nullable":true
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "type":"object"
        },
        "TaskGenomicFile":{
            "properties":{
                "_links":{
                    "type":"string"
                },
                "created_at":{
                    "description":"Time of object creation",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "genomic_file_id":{
                    "example":"GF_ABB2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "is_input":{
                    "type":"boolean"
                },
                "kf_id":{
                    "description":"ID assigned by Kids First",
                    "maxLength":11,
                    "type":"string"
                },
                "modified_at":{
                    "description":"Time of last modification",
                    "format":"date-time",
                    "readOnly":true,
                    "type":"string",
                    "x-nullable":true
                },
                "task_id":{
                    "example":"TK_ABB2C104",
                    "maxLength":11,
                    "type":"string"
                },
                "visible":{
                    "description":"Flags visibility of data from the dataservice",
                    "type":"boolean"
                }
            },
            "required":[
                "genomic_file_id",
                "task_id"
            ],
            "type":"object"
        },
        "TaskGenomicFilePaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/task-genomic-files?after=1519402953",
                        "self":"/task-genomic-files?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/TaskGenomicFile"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "TaskGenomicFileResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/TaskGenomicFile"
                }
            },
            "type":"object"
        },
        "TaskPaginated":{
            "properties":{
                "_links":{
                    "example":{
                        "next":"/tasks?after=1519402953",
                        "self":"/tasks?after=1519402952"
                    },
                    "type":"object"
                },
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "limit":{
                    "description":"Max number of results per page",
                    "example":10,
                    "format":"int32",
                    "type":"integer"
                },
                "results":{
                    "items":{
                        "$ref":"#/definitions/Task"
                    },
                    "type":"array"
                },
                "total":{
                    "description":"Total number of results",
                    "example":1342,
                    "format":"int32",
                    "type":"integer"
                }
            },
            "type":"object"
        },
        "TaskResponse":{
            "properties":{
                "_status":{
                    "example":{
                        "code":200,
                        "message":"success"
                    },
                    "type":"object"
                },
                "results":{
                    "$ref":"#/definitions/Task"
                }
            },
            "type":"object"
        }
    },
    "info":{
        "description":"<center>\n![Kids First](/logo)\n</center>\n\nWelcome to the developer documentation for the Kids First Dataservice API!\n\nThe dataservice is the primary hub for retrieval and creation of Kids First\ndata. It exposes functionality using a familiar REST interface over HTTP\nrequests.\n\n# Connect to the API\n\nThe API is currently only available internally inside the Kids First cloud\nenvironments.\n\n## curl\n\nCurl is the quickest way to communicate with the api from a unix shell\n\nGet the system status:\n```bash\ncurl -H \"Content-Type: application/json\" http://kf-api-dataservice-qa.kids-first.io/status\n```\n\nCreate a new study with the name 'my study':\n```bash\ncurl -XPOST -H \"Content-Type: application/json\" http://kf-api-dataservice-qa.kids-first.io/studies -d '{ \"name\": \"my study\" }'\n```\n\n## Python\n\nWe suggest using the popular `requests` package to interact with the API.\n\nTo get the system status:\n```python\nimport requests\n\nresp = requests.get('http://kf-api-dataservice-qa.kids-first.io/status',\n                    headers={'Content-Type': 'application/json'})\n\nprint(resp.json())\n```\n\nTo create a new study:\n```python\nimport requests\n\nbody = {\n  \"name\": \"my name\"\n}\n\nresp = requests.post('http://kf-api-dataservice-qa.kids-first.io/studies',\n                     headers={'Content-Type': 'application/json'},\n                     json=body)\n\nprint(resp.json())\n```\n\n# Identifiers\n\nThe Kids First dataservice assigns an id to each entity stored in it's\ninternal model upon entry into the service. This id, or `kf_id`, is the primary\nmeans of retrieving and referencing data in the Kids First ecosystem. The\nformat of the `kf_id` is an 8 character,\n[Crockford](http://www.crockford.com/wrmg/base32.html)\nencoded string prefix with a two character prefix denoting the entity type\nand seperated by an underscore.\nSome examples:\n\n - `PH_CZHXGVPB` - A Phenotype\n - `SA_SN4GWD2Q` - A Sample\n - `PT_1AWEK8QD` - A Participant\n - `OC_SBP09501` - An Outcome\n\n# Pagination\n\nMost resource containers are paginated and return 10 entries by default.\nThe dataservice uses the timestamp of the time of the object's creation\nto paginate. Specific dates may also be used. For example:\n\n```\n\"/participants?after=01-12-2017\",\n```\nWill list all participants created after December 1st, 2017.\n\n### Filter Parameters\nThe dataservice supports basic filtering of entities via query parameters specified in the query string of the URL.\nEntities can be filtered by any of their attributes. The only query operator that is currently supported is `=`.\n\nAdditionally, most pagninated resource endpoints also accept the `study_id` query parameter so that\nresults may be filtered by study. For example:\n\n```\n\"/participants?after=01-12-2017&study_id=SD_7AWKP3JN&is_proband=true\"\n```\n\nWill return proband participants created after December 1st, 2017 and which belong to the study identified by the Kids First ID: SD_7AWKP3JN.\n\nAn example of the envelope wrapping a paginated response:\n```json\n{\n    \"_links\": {\n        \"next\": \"/participants?after=1519220889.046443\",\n        \"self\": \"/participants?after=1519220889.035079\"\n    },\n    \"_status\": {\n        \"code\": 200,\n        \"message\": \"success\"\n    },\n    \"limit\": 10,\n    \"results\": [\n      ...\n    ],\n    \"total\": 50\n}\n```\n",
        "title":"Kids First Data Service",
        "version":"1.9.0",
        "x-logo":{
            "url":"/logo"
        }
    },
    "parameters":{},
    "paths":{
        "/biospecimen-diagnoses":{
            "get":{
                "description":"Get BiospecimenDiagnosiss",
                "responses":{
                    "200":{
                        "description":"BiospecimenDiagnosis found",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenDiagnosisPaginated"
                        }
                    }
                },
                "tags":[
                    "BiospecimenDiagnosis"
                ]
            },
            "post":{
                "description":"Create a new BiospecimenDiagnosis",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenDiagnosis"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"BiospecimenDiagnosis created",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenDiagnosisResponse"
                        }
                    },
                    "400":{
                        "description":"BiospecimenDiagnosis not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "BiospecimenDiagnosis"
                ]
            }
        },
        "/biospecimen-diagnoses/{kf_id}":{
            "delete":{
                "description":"Delete a BiospecimenDiagnosis",
                "parameters":[
                    {
                        "description":"ID of BiospecimenDiagnosis to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"BiospecimenDiagnosis deleted",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenDiagnosisResponse"
                        }
                    },
                    "404":{
                        "description":"BiospecimenDiagnosis not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "BiospecimenDiagnosis"
                ]
            },
            "get":{
                "description":"Get BiospecimenDiagnosis by id",
                "parameters":[
                    {
                        "description":"ID of BiospecimenDiagnosis to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"BiospecimenDiagnosis found",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenDiagnosisResponse"
                        }
                    },
                    "404":{
                        "description":"BiospecimenDiagnosis not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "BiospecimenDiagnosis"
                ]
            },
            "patch":{
                "description":"Partial update of a BiospecimenDiagnosis",
                "parameters":[
                    {
                        "description":"ID of the BiospecimenDiagnosisto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/BiospecimenDiagnosis"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"BiospecimenDiagnosis updated",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenDiagnosisResponse"
                        }
                    },
                    "400":{
                        "description":"BiospecimenDiagnosis not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"BiospecimenDiagnosis not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "BiospecimenDiagnosis"
                ]
            }
        },
        "/biospecimen-genomic-files":{
            "get":{
                "description":"Get BiospecimenGenomicFiles",
                "responses":{
                    "200":{
                        "description":"BiospecimenGenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenGenomicFilePaginated"
                        }
                    }
                },
                "tags":[
                    "BiospecimenGenomicFile"
                ]
            },
            "post":{
                "description":"Create a new BiospecimenGenomicFile",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenGenomicFile"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"BiospecimenGenomicFile created",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenGenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"BiospecimenGenomicFile not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "BiospecimenGenomicFile"
                ]
            }
        },
        "/biospecimen-genomic-files/{kf_id}":{
            "delete":{
                "description":"Delete a BiospecimenGenomicFile",
                "parameters":[
                    {
                        "description":"ID of BiospecimenGenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"BiospecimenGenomicFile deleted",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenGenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"BiospecimenGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "BiospecimenGenomicFile"
                ]
            },
            "get":{
                "description":"Get BiospecimenGenomicFile by id",
                "parameters":[
                    {
                        "description":"ID of BiospecimenGenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"BiospecimenGenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenGenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"BiospecimenGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "BiospecimenGenomicFile"
                ]
            },
            "patch":{
                "description":"Partial update of a BiospecimenGenomicFile",
                "parameters":[
                    {
                        "description":"ID of the BiospecimenGenomicFileto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/BiospecimenGenomicFile"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"BiospecimenGenomicFile updated",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenGenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"BiospecimenGenomicFile not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"BiospecimenGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "BiospecimenGenomicFile"
                ]
            }
        },
        "/biospecimens":{
            "get":{
                "description":"Get all biospecimens",
                "responses":{
                    "200":{
                        "description":"Biospecimen found",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenPaginated"
                        }
                    }
                },
                "tags":[
                    "Biospecimen"
                ]
            },
            "post":{
                "description":"Create a new Biospecimen",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Biospecimen"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Biospecimen created",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenResponse"
                        }
                    },
                    "400":{
                        "description":"Biospecimen not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Biospecimen"
                ]
            }
        },
        "/biospecimens/{kf_id}":{
            "delete":{
                "description":"Delete a Biospecimen",
                "parameters":[
                    {
                        "description":"ID of Biospecimen to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Biospecimen deleted",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenResponse"
                        }
                    },
                    "404":{
                        "description":"Biospecimen not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Biospecimen"
                ]
            },
            "get":{
                "description":"Get Biospecimen by id",
                "parameters":[
                    {
                        "description":"ID of Biospecimen to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Biospecimen found",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenResponse"
                        }
                    },
                    "404":{
                        "description":"Biospecimen not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Biospecimen"
                ]
            },
            "patch":{
                "description":"Partial update of a Biospecimen",
                "parameters":[
                    {
                        "description":"ID of the Biospecimento return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Biospecimen"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Biospecimen updated",
                        "schema":{
                            "$ref":"#/definitions/BiospecimenResponse"
                        }
                    },
                    "400":{
                        "description":"Biospecimen not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Biospecimen not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Biospecimen"
                ]
            }
        },
        "/cavatica-apps":{
            "get":{
                "description":"Get CavaticaApps",
                "responses":{
                    "200":{
                        "description":"CavaticaApp found",
                        "schema":{
                            "$ref":"#/definitions/CavaticaAppPaginated"
                        }
                    }
                },
                "tags":[
                    "CavaticaApp"
                ]
            },
            "post":{
                "description":"Create a new CavaticaApp",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/CavaticaApp"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"CavaticaApp created",
                        "schema":{
                            "$ref":"#/definitions/CavaticaAppResponse"
                        }
                    },
                    "400":{
                        "description":"CavaticaApp not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "CavaticaApp"
                ]
            }
        },
        "/cavatica-apps/{kf_id}":{
            "delete":{
                "description":"Delete a CavaticaApp",
                "parameters":[
                    {
                        "description":"ID of CavaticaApp to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"CavaticaApp deleted",
                        "schema":{
                            "$ref":"#/definitions/CavaticaAppResponse"
                        }
                    },
                    "404":{
                        "description":"CavaticaApp not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "CavaticaApp"
                ]
            },
            "get":{
                "description":"Get CavaticaApp by id",
                "parameters":[
                    {
                        "description":"ID of CavaticaApp to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"CavaticaApp found",
                        "schema":{
                            "$ref":"#/definitions/CavaticaAppResponse"
                        }
                    },
                    "404":{
                        "description":"CavaticaApp not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "CavaticaApp"
                ]
            },
            "patch":{
                "description":"Partial update of a CavaticaApp",
                "parameters":[
                    {
                        "description":"ID of the CavaticaAppto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/CavaticaApp"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"CavaticaApp updated",
                        "schema":{
                            "$ref":"#/definitions/CavaticaAppResponse"
                        }
                    },
                    "400":{
                        "description":"CavaticaApp not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"CavaticaApp not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "CavaticaApp"
                ]
            }
        },
        "/diagnoses":{
            "get":{
                "description":"Get all diagnoses",
                "responses":{
                    "200":{
                        "description":"Diagnosis found",
                        "schema":{
                            "$ref":"#/definitions/DiagnosisPaginated"
                        }
                    }
                },
                "tags":[
                    "Diagnosis"
                ]
            },
            "post":{
                "description":"Create a new Diagnosis",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Diagnosis"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Diagnosis created",
                        "schema":{
                            "$ref":"#/definitions/DiagnosisResponse"
                        }
                    },
                    "400":{
                        "description":"Diagnosis not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Diagnosis"
                ]
            }
        },
        "/diagnoses/{kf_id}":{
            "delete":{
                "description":"Delete a Diagnosis",
                "parameters":[
                    {
                        "description":"ID of Diagnosis to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Diagnosis deleted",
                        "schema":{
                            "$ref":"#/definitions/DiagnosisResponse"
                        }
                    },
                    "404":{
                        "description":"Diagnosis not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Diagnosis"
                ]
            },
            "get":{
                "description":"Get Diagnosis by id",
                "parameters":[
                    {
                        "description":"ID of Diagnosis to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Diagnosis found",
                        "schema":{
                            "$ref":"#/definitions/DiagnosisResponse"
                        }
                    },
                    "404":{
                        "description":"Diagnosis not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Diagnosis"
                ]
            },
            "patch":{
                "description":"Partial update of a Diagnosis",
                "parameters":[
                    {
                        "description":"ID of the Diagnosisto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Diagnosis"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Diagnosis updated",
                        "schema":{
                            "$ref":"#/definitions/DiagnosisResponse"
                        }
                    },
                    "400":{
                        "description":"Diagnosis not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Diagnosis not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Diagnosis"
                ]
            }
        },
        "/families":{
            "get":{
                "description":"Get Familys",
                "responses":{
                    "200":{
                        "description":"Family found",
                        "schema":{
                            "$ref":"#/definitions/FamilyPaginated"
                        }
                    }
                },
                "tags":[
                    "Family"
                ]
            },
            "post":{
                "description":"Create a new Family",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Family"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Family created",
                        "schema":{
                            "$ref":"#/definitions/FamilyResponse"
                        }
                    },
                    "400":{
                        "description":"Family not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Family"
                ]
            }
        },
        "/families/{kf_id}":{
            "delete":{
                "description":"Delete a Family",
                "parameters":[
                    {
                        "description":"ID of Family to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Family deleted",
                        "schema":{
                            "$ref":"#/definitions/FamilyResponse"
                        }
                    },
                    "404":{
                        "description":"Family not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Family"
                ]
            },
            "get":{
                "description":"Get Family by id",
                "parameters":[
                    {
                        "description":"ID of Family to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Family found",
                        "schema":{
                            "$ref":"#/definitions/FamilyResponse"
                        }
                    },
                    "404":{
                        "description":"Family not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Family"
                ]
            },
            "patch":{
                "description":"Partial update of a Family",
                "parameters":[
                    {
                        "description":"ID of the Familyto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Family"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Family updated",
                        "schema":{
                            "$ref":"#/definitions/FamilyResponse"
                        }
                    },
                    "400":{
                        "description":"Family not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Family not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Family"
                ]
            }
        },
        "/family-relationships":{
            "get":{
                "description":"Get all family_relationships",
                "responses":{
                    "200":{
                        "description":"FamilyRelationship found",
                        "schema":{
                            "$ref":"#/definitions/FamilyRelationshipPaginated"
                        }
                    }
                },
                "tags":[
                    "FamilyRelationship"
                ]
            },
            "post":{
                "description":"Create a new FamilyRelationship",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/FamilyRelationship"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"FamilyRelationship created",
                        "schema":{
                            "$ref":"#/definitions/FamilyRelationshipResponse"
                        }
                    },
                    "400":{
                        "description":"FamilyRelationship not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "FamilyRelationship"
                ]
            }
        },
        "/family-relationships/{kf_id}":{
            "delete":{
                "description":"Delete a FamilyRelationship",
                "parameters":[
                    {
                        "description":"ID of FamilyRelationship to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"FamilyRelationship deleted",
                        "schema":{
                            "$ref":"#/definitions/FamilyRelationshipResponse"
                        }
                    },
                    "404":{
                        "description":"FamilyRelationship not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "FamilyRelationship"
                ]
            },
            "get":{
                "description":"Get FamilyRelationship by id",
                "parameters":[
                    {
                        "description":"ID of FamilyRelationship to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"FamilyRelationship found",
                        "schema":{
                            "$ref":"#/definitions/FamilyRelationshipResponse"
                        }
                    },
                    "404":{
                        "description":"FamilyRelationship not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "FamilyRelationship"
                ]
            },
            "patch":{
                "description":"Partial update of a FamilyRelationship",
                "parameters":[
                    {
                        "description":"ID of the FamilyRelationshipto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/FamilyRelationship"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"FamilyRelationship updated",
                        "schema":{
                            "$ref":"#/definitions/FamilyRelationshipResponse"
                        }
                    },
                    "400":{
                        "description":"FamilyRelationship not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"FamilyRelationship not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "FamilyRelationship"
                ]
            }
        },
        "/genomic-files":{
            "get":{
                "description":"Get GenomicFiles",
                "responses":{
                    "200":{
                        "description":"GenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/GenomicFilePaginated"
                        }
                    }
                },
                "tags":[
                    "GenomicFile"
                ]
            },
            "post":{
                "description":"Create a new GenomicFile",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/GenomicFile"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"GenomicFile created",
                        "schema":{
                            "$ref":"#/definitions/GenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"GenomicFile not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "GenomicFile"
                ]
            }
        },
        "/genomic-files/{kf_id}":{
            "delete":{
                "description":"Delete a GenomicFile",
                "parameters":[
                    {
                        "description":"ID of GenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"GenomicFile deleted",
                        "schema":{
                            "$ref":"#/definitions/GenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"GenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "GenomicFile"
                ]
            },
            "get":{
                "description":"Get GenomicFile by id",
                "parameters":[
                    {
                        "description":"ID of GenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"GenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/GenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"GenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "GenomicFile"
                ]
            },
            "patch":{
                "description":"Partial update of a GenomicFile",
                "parameters":[
                    {
                        "description":"ID of the GenomicFileto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/GenomicFile"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"GenomicFile updated",
                        "schema":{
                            "$ref":"#/definitions/GenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"GenomicFile not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"GenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "GenomicFile"
                ]
            }
        },
        "/investigators":{
            "get":{
                "description":"Get Investigators",
                "responses":{
                    "200":{
                        "description":"Investigator found",
                        "schema":{
                            "$ref":"#/definitions/InvestigatorPaginated"
                        }
                    }
                },
                "tags":[
                    "Investigator"
                ]
            },
            "post":{
                "description":"Create a new Investigator",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Investigator"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Investigator created",
                        "schema":{
                            "$ref":"#/definitions/InvestigatorResponse"
                        }
                    },
                    "400":{
                        "description":"Investigator not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Investigator"
                ]
            }
        },
        "/investigators/{kf_id}":{
            "delete":{
                "description":"Delete a Investigator",
                "parameters":[
                    {
                        "description":"ID of Investigator to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Investigator deleted",
                        "schema":{
                            "$ref":"#/definitions/InvestigatorResponse"
                        }
                    },
                    "404":{
                        "description":"Investigator not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Investigator"
                ]
            },
            "get":{
                "description":"Get Investigator by id",
                "parameters":[
                    {
                        "description":"ID of Investigator to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Investigator found",
                        "schema":{
                            "$ref":"#/definitions/InvestigatorResponse"
                        }
                    },
                    "404":{
                        "description":"Investigator not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Investigator"
                ]
            },
            "patch":{
                "description":"Partial update of a Investigator",
                "parameters":[
                    {
                        "description":"ID of the Investigatorto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Investigator"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Investigator updated",
                        "schema":{
                            "$ref":"#/definitions/InvestigatorResponse"
                        }
                    },
                    "400":{
                        "description":"Investigator not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Investigator not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Investigator"
                ]
            }
        },
        "/outcomes":{
            "get":{
                "description":"Get all outcomes",
                "responses":{
                    "200":{
                        "description":"Outcome found",
                        "schema":{
                            "$ref":"#/definitions/OutcomePaginated"
                        }
                    }
                },
                "tags":[
                    "Outcome"
                ]
            },
            "post":{
                "description":"Create a new Outcome",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Outcome"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Outcome created",
                        "schema":{
                            "$ref":"#/definitions/OutcomeResponse"
                        }
                    },
                    "400":{
                        "description":"Outcome not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Outcome"
                ]
            }
        },
        "/outcomes/{kf_id}":{
            "delete":{
                "description":"Delete a Outcome",
                "parameters":[
                    {
                        "description":"ID of Outcome to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Outcome deleted",
                        "schema":{
                            "$ref":"#/definitions/OutcomeResponse"
                        }
                    },
                    "404":{
                        "description":"Outcome not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Outcome"
                ]
            },
            "get":{
                "description":"Get Outcome by id",
                "parameters":[
                    {
                        "description":"ID of Outcome to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Outcome found",
                        "schema":{
                            "$ref":"#/definitions/OutcomeResponse"
                        }
                    },
                    "404":{
                        "description":"Outcome not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Outcome"
                ]
            },
            "patch":{
                "description":"Partial update of a Outcome",
                "parameters":[
                    {
                        "description":"ID of the Outcometo return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Outcome"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Outcome updated",
                        "schema":{
                            "$ref":"#/definitions/OutcomeResponse"
                        }
                    },
                    "400":{
                        "description":"Outcome not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Outcome not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Outcome"
                ]
            }
        },
        "/participants":{
            "get":{
                "description":"Get Participants",
                "responses":{
                    "200":{
                        "description":"Participant found",
                        "schema":{
                            "$ref":"#/definitions/ParticipantPaginated"
                        }
                    }
                },
                "tags":[
                    "Participant"
                ]
            },
            "post":{
                "description":"Create a new Participant",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Participant"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Participant created",
                        "schema":{
                            "$ref":"#/definitions/ParticipantResponse"
                        }
                    },
                    "400":{
                        "description":"Participant not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Participant"
                ]
            }
        },
        "/participants/{kf_id}":{
            "delete":{
                "description":"Delete a Participant",
                "parameters":[
                    {
                        "description":"ID of Participant to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Participant deleted",
                        "schema":{
                            "$ref":"#/definitions/ParticipantResponse"
                        }
                    },
                    "404":{
                        "description":"Participant not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Participant"
                ]
            },
            "get":{
                "description":"Get Participant by id",
                "parameters":[
                    {
                        "description":"ID of Participant to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Participant found",
                        "schema":{
                            "$ref":"#/definitions/ParticipantResponse"
                        }
                    },
                    "404":{
                        "description":"Participant not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Participant"
                ]
            },
            "patch":{
                "description":"Partial update of a Participant",
                "parameters":[
                    {
                        "description":"ID of the Participantto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Participant"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Participant updated",
                        "schema":{
                            "$ref":"#/definitions/ParticipantResponse"
                        }
                    },
                    "400":{
                        "description":"Participant not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Participant not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Participant"
                ]
            }
        },
        "/phenotypes":{
            "get":{
                "description":"Get all phenotypes",
                "responses":{
                    "200":{
                        "description":"Phenotype found",
                        "schema":{
                            "$ref":"#/definitions/PhenotypePaginated"
                        }
                    }
                },
                "tags":[
                    "Phenotype"
                ]
            },
            "post":{
                "description":"Create a new Phenotype",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Phenotype"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Phenotype created",
                        "schema":{
                            "$ref":"#/definitions/PhenotypeResponse"
                        }
                    },
                    "400":{
                        "description":"Phenotype not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Phenotype"
                ]
            }
        },
        "/phenotypes/{kf_id}":{
            "delete":{
                "description":"Delete a Phenotype",
                "parameters":[
                    {
                        "description":"ID of Phenotype to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Phenotype deleted",
                        "schema":{
                            "$ref":"#/definitions/PhenotypeResponse"
                        }
                    },
                    "404":{
                        "description":"Phenotype not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Phenotype"
                ]
            },
            "get":{
                "description":"Get Phenotype by id",
                "parameters":[
                    {
                        "description":"ID of Phenotype to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Phenotype found",
                        "schema":{
                            "$ref":"#/definitions/PhenotypeResponse"
                        }
                    },
                    "404":{
                        "description":"Phenotype not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Phenotype"
                ]
            },
            "patch":{
                "description":"Partial update of a Phenotype",
                "parameters":[
                    {
                        "description":"ID of the Phenotypeto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Phenotype"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Phenotype updated",
                        "schema":{
                            "$ref":"#/definitions/PhenotypeResponse"
                        }
                    },
                    "400":{
                        "description":"Phenotype not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Phenotype not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Phenotype"
                ]
            }
        },
        "/read-group-genomic-files":{
            "get":{
                "description":"Get ReadGroupGenomicFiles",
                "responses":{
                    "200":{
                        "description":"ReadGroupGenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupGenomicFilePaginated"
                        }
                    }
                },
                "tags":[
                    "ReadGroupGenomicFile"
                ]
            },
            "post":{
                "description":"Create a new ReadGroupGenomicFile",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupGenomicFile"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"ReadGroupGenomicFile created",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupGenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"ReadGroupGenomicFile not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "ReadGroupGenomicFile"
                ]
            }
        },
        "/read-group-genomic-files/{kf_id}":{
            "delete":{
                "description":"Delete a ReadGroupGenomicFile",
                "parameters":[
                    {
                        "description":"ID of ReadGroupGenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"ReadGroupGenomicFile deleted",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupGenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"ReadGroupGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "ReadGroupGenomicFile"
                ]
            },
            "get":{
                "description":"Get ReadGroupGenomicFile by id",
                "parameters":[
                    {
                        "description":"ID of ReadGroupGenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"ReadGroupGenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupGenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"ReadGroupGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "ReadGroupGenomicFile"
                ]
            },
            "patch":{
                "description":"Partial update of a ReadGroupGenomicFile",
                "parameters":[
                    {
                        "description":"ID of the ReadGroupGenomicFileto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ReadGroupGenomicFile"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"ReadGroupGenomicFile updated",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupGenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"ReadGroupGenomicFile not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"ReadGroupGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "ReadGroupGenomicFile"
                ]
            }
        },
        "/read-groups":{
            "get":{
                "description":"Get all read_groups",
                "responses":{
                    "200":{
                        "description":"ReadGroup found",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupPaginated"
                        }
                    }
                },
                "tags":[
                    "ReadGroup"
                ]
            },
            "post":{
                "description":"Create a new ReadGroup",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/ReadGroup"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"ReadGroup created",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupResponse"
                        }
                    },
                    "400":{
                        "description":"ReadGroup not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "ReadGroup"
                ]
            }
        },
        "/read-groups/{kf_id}":{
            "delete":{
                "description":"Delete a ReadGroup",
                "parameters":[
                    {
                        "description":"ID of ReadGroup to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"ReadGroup deleted",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupResponse"
                        }
                    },
                    "404":{
                        "description":"ReadGroup not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "ReadGroup"
                ]
            },
            "get":{
                "description":"Get ReadGroup by id",
                "parameters":[
                    {
                        "description":"ID of ReadGroup to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"ReadGroup found",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupResponse"
                        }
                    },
                    "404":{
                        "description":"ReadGroup not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "ReadGroup"
                ]
            },
            "patch":{
                "description":"Partial update of a ReadGroup",
                "parameters":[
                    {
                        "description":"ID of the ReadGroupto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ReadGroup"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"ReadGroup updated",
                        "schema":{
                            "$ref":"#/definitions/ReadGroupResponse"
                        }
                    },
                    "400":{
                        "description":"ReadGroup not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"ReadGroup not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "ReadGroup"
                ]
            }
        },
        "/sequencing-centers":{
            "get":{
                "description":"Get all sequencing_centers",
                "responses":{
                    "200":{
                        "description":"SequencingCenter found",
                        "schema":{
                            "$ref":"#/definitions/SequencingCenterPaginated"
                        }
                    }
                },
                "tags":[
                    "SequencingCenter"
                ]
            },
            "post":{
                "description":"Create a new SequencingCenter",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/SequencingCenter"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"SequencingCenter created",
                        "schema":{
                            "$ref":"#/definitions/SequencingCenterResponse"
                        }
                    },
                    "400":{
                        "description":"SequencingCenter not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingCenter"
                ]
            }
        },
        "/sequencing-centers/{kf_id}":{
            "delete":{
                "description":"Delete a SequencingCenter",
                "parameters":[
                    {
                        "description":"ID of SequencingCenter to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingCenter deleted",
                        "schema":{
                            "$ref":"#/definitions/SequencingCenterResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingCenter not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingCenter"
                ]
            },
            "get":{
                "description":"Get SequencingCenter by id",
                "parameters":[
                    {
                        "description":"ID of SequencingCenter to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingCenter found",
                        "schema":{
                            "$ref":"#/definitions/SequencingCenterResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingCenter not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingCenter"
                ]
            },
            "patch":{
                "description":"Partial update of a SequencingCenter",
                "parameters":[
                    {
                        "description":"ID of the SequencingCenterto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SequencingCenter"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingCenter updated",
                        "schema":{
                            "$ref":"#/definitions/SequencingCenterResponse"
                        }
                    },
                    "400":{
                        "description":"SequencingCenter not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingCenter not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingCenter"
                ]
            }
        },
        "/sequencing-experiment-genomic-files":{
            "get":{
                "description":"Get SequencingExperimentGenomicFiles",
                "responses":{
                    "200":{
                        "description":"SequencingExperimentGenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentGenomicFilePaginated"
                        }
                    }
                },
                "tags":[
                    "SequencingExperimentGenomicFile"
                ]
            },
            "post":{
                "description":"Create a new SequencingExperimentGenomicFile",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentGenomicFile"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"SequencingExperimentGenomicFile created",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentGenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"SequencingExperimentGenomicFile not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingExperimentGenomicFile"
                ]
            }
        },
        "/sequencing-experiment-genomic-files/{kf_id}":{
            "delete":{
                "description":"Delete a SequencingExperimentGenomicFile",
                "parameters":[
                    {
                        "description":"ID of SequencingExperimentGenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingExperimentGenomicFile deleted",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentGenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingExperimentGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingExperimentGenomicFile"
                ]
            },
            "get":{
                "description":"Get SequencingExperimentGenomicFile by id",
                "parameters":[
                    {
                        "description":"ID of SequencingExperimentGenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingExperimentGenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentGenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingExperimentGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingExperimentGenomicFile"
                ]
            },
            "patch":{
                "description":"Partial update of a SequencingExperimentGenomicFile",
                "parameters":[
                    {
                        "description":"ID of the SequencingExperimentGenomicFileto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentGenomicFile"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingExperimentGenomicFile updated",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentGenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"SequencingExperimentGenomicFile not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingExperimentGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingExperimentGenomicFile"
                ]
            }
        },
        "/sequencing-experiments":{
            "get":{
                "description":"Get all sequencing_experiments",
                "responses":{
                    "200":{
                        "description":"SequencingExperiment found",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentPaginated"
                        }
                    }
                },
                "tags":[
                    "SequencingExperiment"
                ]
            },
            "post":{
                "description":"Create a new SequencingExperiment",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperiment"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"SequencingExperiment created",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentResponse"
                        }
                    },
                    "400":{
                        "description":"SequencingExperiment not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingExperiment"
                ]
            }
        },
        "/sequencing-experiments/{kf_id}":{
            "delete":{
                "description":"Delete a SequencingExperiment",
                "parameters":[
                    {
                        "description":"ID of SequencingExperiment to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingExperiment deleted",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingExperiment not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingExperiment"
                ]
            },
            "get":{
                "description":"Get SequencingExperiment by id",
                "parameters":[
                    {
                        "description":"ID of SequencingExperiment to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingExperiment found",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingExperiment not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingExperiment"
                ]
            },
            "patch":{
                "description":"Partial update of a SequencingExperiment",
                "parameters":[
                    {
                        "description":"ID of the SequencingExperimentto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SequencingExperiment"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"SequencingExperiment updated",
                        "schema":{
                            "$ref":"#/definitions/SequencingExperimentResponse"
                        }
                    },
                    "400":{
                        "description":"SequencingExperiment not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"SequencingExperiment not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "SequencingExperiment"
                ]
            }
        },
        "/status":{
            "get":{
                "description":"Get the service status",
                "responses":{
                    "200":{
                        "description":"Success",
                        "schema":{
                            "$ref":"#/definitions/Status"
                        }
                    }
                },
                "tags":[
                    "Status"
                ]
            }
        },
        "/studies":{
            "get":{
                "description":"Get Studys",
                "responses":{
                    "200":{
                        "description":"Study found",
                        "schema":{
                            "$ref":"#/definitions/StudyPaginated"
                        }
                    }
                },
                "tags":[
                    "Study"
                ]
            },
            "post":{
                "description":"Create a new Study",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Study"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Study created",
                        "schema":{
                            "$ref":"#/definitions/StudyResponse"
                        }
                    },
                    "400":{
                        "description":"Study not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Study"
                ]
            }
        },
        "/studies/{kf_id}":{
            "delete":{
                "description":"Delete a Study",
                "parameters":[
                    {
                        "description":"ID of Study to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Study deleted",
                        "schema":{
                            "$ref":"#/definitions/StudyResponse"
                        }
                    },
                    "404":{
                        "description":"Study not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Study"
                ]
            },
            "get":{
                "description":"Get Study by id",
                "parameters":[
                    {
                        "description":"ID of Study to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Study found",
                        "schema":{
                            "$ref":"#/definitions/StudyResponse"
                        }
                    },
                    "404":{
                        "description":"Study not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Study"
                ]
            },
            "patch":{
                "description":"Partial update of a Study",
                "parameters":[
                    {
                        "description":"ID of the Studyto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Study"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Study updated",
                        "schema":{
                            "$ref":"#/definitions/StudyResponse"
                        }
                    },
                    "400":{
                        "description":"Study not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Study not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Study"
                ]
            }
        },
        "/study-files":{
            "get":{
                "description":"Get StudyFiles",
                "responses":{
                    "200":{
                        "description":"StudyFile found",
                        "schema":{
                            "$ref":"#/definitions/StudyFilePaginated"
                        }
                    }
                },
                "tags":[
                    "StudyFile"
                ]
            },
            "post":{
                "description":"Create a new StudyFile",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/StudyFile"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"StudyFile created",
                        "schema":{
                            "$ref":"#/definitions/StudyFileResponse"
                        }
                    },
                    "400":{
                        "description":"StudyFile not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "StudyFile"
                ]
            }
        },
        "/study-files/{kf_id}":{
            "delete":{
                "description":"Delete a StudyFile",
                "parameters":[
                    {
                        "description":"ID of StudyFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"StudyFile deleted",
                        "schema":{
                            "$ref":"#/definitions/StudyFileResponse"
                        }
                    },
                    "404":{
                        "description":"StudyFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "StudyFile"
                ]
            },
            "get":{
                "description":"Get StudyFile by id",
                "parameters":[
                    {
                        "description":"ID of StudyFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"StudyFile found",
                        "schema":{
                            "$ref":"#/definitions/StudyFileResponse"
                        }
                    },
                    "404":{
                        "description":"StudyFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "StudyFile"
                ]
            },
            "patch":{
                "description":"Partial update of a StudyFile",
                "parameters":[
                    {
                        "description":"ID of the StudyFileto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/StudyFile"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"StudyFile updated",
                        "schema":{
                            "$ref":"#/definitions/StudyFileResponse"
                        }
                    },
                    "400":{
                        "description":"StudyFile not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"StudyFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "StudyFile"
                ]
            }
        },
        "/task-genomic-files":{
            "get":{
                "description":"Get TaskGenomicFiles",
                "responses":{
                    "200":{
                        "description":"TaskGenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/TaskGenomicFilePaginated"
                        }
                    }
                },
                "tags":[
                    "TaskGenomicFile"
                ]
            },
            "post":{
                "description":"Create a new TaskGenomicFile",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/TaskGenomicFile"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"TaskGenomicFile created",
                        "schema":{
                            "$ref":"#/definitions/TaskGenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"TaskGenomicFile not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "TaskGenomicFile"
                ]
            }
        },
        "/task-genomic-files/{kf_id}":{
            "delete":{
                "description":"Delete a TaskGenomicFile",
                "parameters":[
                    {
                        "description":"ID of TaskGenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"TaskGenomicFile deleted",
                        "schema":{
                            "$ref":"#/definitions/TaskGenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"TaskGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "TaskGenomicFile"
                ]
            },
            "get":{
                "description":"Get TaskGenomicFile by id",
                "parameters":[
                    {
                        "description":"ID of TaskGenomicFile to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"TaskGenomicFile found",
                        "schema":{
                            "$ref":"#/definitions/TaskGenomicFileResponse"
                        }
                    },
                    "404":{
                        "description":"TaskGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "TaskGenomicFile"
                ]
            },
            "patch":{
                "description":"Partial update of a TaskGenomicFile",
                "parameters":[
                    {
                        "description":"ID of the TaskGenomicFileto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/TaskGenomicFile"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"TaskGenomicFile updated",
                        "schema":{
                            "$ref":"#/definitions/TaskGenomicFileResponse"
                        }
                    },
                    "400":{
                        "description":"TaskGenomicFile not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"TaskGenomicFile not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "TaskGenomicFile"
                ]
            }
        },
        "/tasks":{
            "get":{
                "description":"Get Tasks",
                "responses":{
                    "200":{
                        "description":"Task found",
                        "schema":{
                            "$ref":"#/definitions/TaskPaginated"
                        }
                    }
                },
                "tags":[
                    "Task"
                ]
            },
            "post":{
                "description":"Create a new Task",
                "parameters":[
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "schema":{
                            "$ref":"#/definitions/Task"
                        }
                    }
                ],
                "responses":{
                    "201":{
                        "description":"Task created",
                        "schema":{
                            "$ref":"#/definitions/TaskResponse"
                        }
                    },
                    "400":{
                        "description":"Task not created",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Task"
                ]
            }
        },
        "/tasks/{kf_id}":{
            "delete":{
                "description":"Delete a Task",
                "parameters":[
                    {
                        "description":"ID of Task to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Task deleted",
                        "schema":{
                            "$ref":"#/definitions/TaskResponse"
                        }
                    },
                    "404":{
                        "description":"Task not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Task"
                ]
            },
            "get":{
                "description":"Get Task by id",
                "parameters":[
                    {
                        "description":"ID of Task to return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Task found",
                        "schema":{
                            "$ref":"#/definitions/TaskResponse"
                        }
                    },
                    "404":{
                        "description":"Task not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Task"
                ]
            },
            "patch":{
                "description":"Partial update of a Task",
                "parameters":[
                    {
                        "description":"ID of the Taskto return",
                        "in":"path",
                        "name":"kf_id",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "description":"Content",
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/Task"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Task updated",
                        "schema":{
                            "$ref":"#/definitions/TaskResponse"
                        }
                    },
                    "400":{
                        "description":"Task not updated",
                        "schema":{
                            "$ref":"#/definitions/ClientErrorResponse"
                        }
                    },
                    "404":{
                        "description":"Task not found",
                        "schema":{
                            "$ref":"#/definitions/NotFoundErrorResponse"
                        }
                    }
                },
                "tags":[
                    "Task"
                ]
            }
        }
    },
    "swagger":"2.0",
    "tags":[
        {
            "description":"ID Prefix: `TK`\n",
            "name":"Task"
        },
        {
            "description":"ID Prefix: `SG`\n",
            "name":"SequencingExperimentGenomicFile"
        },
        {
            "description":"Contains version and health information about the Dataservice API.\n",
            "name":"Status"
        },
        {
            "description":"ID Prefix: `RF`\n",
            "name":"ReadGroupGenomicFile"
        },
        {
            "description":"ID Prefix: `CA`\n",
            "name":"CavaticaApp"
        },
        {
            "description":"ID Prefix: `FM`\n\nA participant may optionally be a part of a family.\n",
            "name":"Family"
        },
        {
            "description":"ID Prefix: `PT`\n\nA participant is one of the central entities of the Kid's First DCC.\n",
            "name":"Participant"
        },
        {
            "description":"ID Prefix: `TG`\n",
            "name":"TaskGenomicFile"
        }
    ]
}